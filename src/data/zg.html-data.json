{"version":1.1,"tags":[{"name":"zg-body","description":"`<zg-body>` is created dynamically by the ZingGrid library, and as such should not be manually added by the\ndeveloper.  However the user can style `<zg-body>` using CSS.","attributes":[]},{"name":"zg-button","description":"A custom, styled button that can be used both for internal grid-related action and for user-specific\nactions. It is stylable via CSS. Some buttons are automatically inserted when a feature that uses it enabled, like `pager`, while\nothers are inserted manually by the user.","attributes":[{"name":"action","description":"Sets the action of the button.","values":[{"name":"\"cancel\""},{"name":"\"cancelrecord\""},{"name":"\"checkbox\""},{"name":"\"copycell\""},{"name":"\"createrecord\""},{"name":"\"createrecordend\""},{"name":"\"createrecordstart\""},{"name":"\"deselect\""},{"name":"\"editcell\""},{"name":"\"editrecord\""},{"name":"\"editrow\""},{"name":"\"firstpage\""},{"name":"\"fixedmenu\""},{"name":"\"getselection\""},{"name":"\"insertrecord\""},{"name":"\"layoutrow\""},{"name":"\"layoutcard\""},{"name":"\"lastpage\""},{"name":"\"menu\""},{"name":"\"nextpage\""},{"name":"\"pastecell\""},{"name":"\"prevpage\""},{"name":"\"reload\""},{"name":"\"removerecord\""},{"name":"\"search\""},{"name":"\"selectcell\""},{"name":"\"selectrow\""},{"name":"\"sortcolumn\""},{"name":"\"submitrecord\""},{"name":"\"about\""}]},{"name":"disabled","description":"Presence of attribute determines if the button is disabled or not.","values":[{"name":"N/A"}]},{"name":"icon","description":"Sets the icon for the button.","values":[{"name":"\"cancel\""},{"name":"\"cancelrecord\""},{"name":"\"checked\""},{"name":"\"checkmark\""},{"name":"\"close\""},{"name":"\"createrecord\""},{"name":"\"down\""},{"name":"\"edit\""},{"name":"\"editrecord\""},{"name":"\"error\""},{"name":"\"error-tmp\""},{"name":"\"firstpage\""},{"name":"\"fixedmenu\""},{"name":"\"info\""},{"name":"\"lastpage\""},{"name":"\"layoutcard\""},{"name":"\"layoutrow\""},{"name":"\"link\""},{"name":"\"menu\""},{"name":"\"nextpage\""},{"name":"\"outsidearrow\""},{"name":"\"prevpage\""},{"name":"\"reload\""},{"name":"\"remove\""},{"name":"\"removerecord\""},{"name":"\"search\""},{"name":"\"submitrecord\""},{"name":"\"success\""},{"name":"\"unchecked\""},{"name":"\"up\""},{"name":"\"warning\""}]}]},{"name":"zg-caption","description":"A caption can be manually inserted inside the `<zing-grid>` tag as slotted content or automatically\ninserted when the `caption` is enabled.  `<zg-caption>` is stylable via CSS.","attributes":[{"name":"align","description":"The alignment of content in the caption.","values":[{"name":"\"left\""},{"name":"\"right\""},{"name":"\"center\""}]},{"name":"position","description":"Indicates where to position the caption.","values":[{"name":"\"top\""},{"name":"\"bottom\""},{"name":"\"both\""}]}]},{"name":"zg-card","description":"The container for a card template that holds a custom template for card mode.  This custom template\nwill be rendered per row.  `<zg-card>` can be styled via CSS or the `--zg-card-*` selectors.  Please reference\nthe \"Template\" section for more details on templates.","attributes":[{"name":"editor","description":"Sets the custom editor","values":[]},{"name":"editorTemplate","description":"Points to an external template element to be used as the template for the card's editor","values":[]},{"name":"renderer","description":"The return value of the method is set as the innerHTML of `<zg-card>`.  If nothing is returned, \nit will not change the currently rendered card. The method takes the paramters `data`, `domCard`, and `rowObject`.","values":[{"name":"\"<p>Card content</p>\""}]},{"name":"renderer-template","description":"Points to an external template element to be used as the template for the card's render.","values":[{"name":"\"myTemplateId\""}]}]},{"name":"zg-cell","description":"`<zg-cell>` is the container for a single cell;\nit corresponds to the `<td>` tag on an HTML table.  It is automatically inserted and should not \nbe placed directly in the user's HTML.  `<zg-cell>` can be styled via CSS.","attributes":[]},{"name":"zg-checkbox","description":"A checkbox is automatically inserted when\na feature that uses it is enabled, like `<zg-column type=\"selector\">`, or it can be manually-inserted\nto the grid. It can be style via CSS.","attributes":[{"name":"checked","description":"Presence of attribute determines if the checkbox is checked.","values":[{"name":"N/A"}]}]},{"name":"zg-colgroup","description":"`<zg-colgroup>` is a container for the columns of the grid specified by `<zg-column>` tags.  \nThis element is similiar in function to the `<colgroup>` tag in an HTML element.  \nDevelopers should always add this element to their grid structure, however ZingGrid will insert it \nautomatically if it is omitted.  As an non-visual element you should not apply style to this tag.\nNote: Omission of `<zg-colgroup>` may results in a slight performance for autoinsertion.","attributes":[]},{"name":"zg-column","description":"The `<zg-column>` tag is used to associate the columns of the grid to the values \nin a data set.  Attributes on the tag are used to configure both the data type, style and function \nof the grid column.  It is possible to build grids without explict `<zg-column>` tags and in the \ncase ZingGrid will add a column for each index in the dataset. However, developers are encouraged to \nexplore the features available with `<zg-column>` to utilize the powerful features ZingGrid has to offer.","attributes":[{"name":"align","description":"Aligns the contents of the cell.","values":[{"name":"\"center\""},{"name":"\"left\""},{"name":"\"right\""}]},{"name":"cell-class","description":"The class to be set directly on `<zg-cell>` within the column. `cell-class` applied to\n`<zg-column>` will overwrite the `cell-class` applied to `<zing-grid>`.","values":[{"name":"\"userCustomClass\""}]},{"name":"content-style","description":"When an additional HTML element is added to the renderer, as in the case of image and url, \n`content-style` will be put into a style attribute directly on the element.","values":[{"name":"\"max-width: 50px;\""}]},{"name":"content-width","description":"Sets the width of the content inside of the cell. Used on cells of column type\n`element`, `iframe`, `image`, or `url`.","values":[{"name":"\"500\""},{"name":"\"500px\""},{"name":"500"}]},{"name":"draggable","description":"Disable the draggable state of a specific column when `draggable` enabled on `<zing-grid>`.","values":[{"name":"\"disabled\""}]},{"name":"editor","description":"Overrides the default editor for the column.  Can be set to a different built in editor (based on type of column), \ncustom editor, or `false` to turn off editor. \nIf set to a custom editor, the attribute value should be set to the name of the object.\nSee \"Features\" page on \"Editing: Custom Editor\" for more details on custom editor.","values":[{"name":"\"columnType\""},{"name":"\"objectName\""},{"name":"false"}]},{"name":"editor-template","description":"Points to an external template element to be used as the template for the column's editor.","values":[{"name":"\"myTemplateId\""}]},{"name":"filter","description":"Overrides the grid level `filter` attribute.  Presence of attribute enables on `filter` column, otherwise\nset to `disabled` to disable.","values":[{"name":"\"disabled\""}]},{"name":"foot-cell","description":"The aggregate function, tokenized string or function to evaluate for the foot cell of the column.\nIf using a function, the functin takes the parameters `columnData` and `columnFieldIndex`.","values":[{"name":"\"sum\""},{"name":"\"avg\""},{"name":"\"max\""},{"name":"\"min\""},{"name":"\"count\""},{"name":"\"tokenized string\""},{"name":"\"functionName\""}]},{"name":"head-cell","description":"The aggregate function to evaluate for the head cell of the column.\nIf using a function, the functin takes the parameters `columnData` and `columnFieldIndex`.","values":[{"name":"\"sum\""},{"name":"\"avg\""},{"name":"\"max\""},{"name":"\"min\""},{"name":"\"count\""},{"name":"\"tokenized string\""},{"name":"\"functionName\""}]},{"name":"header","description":"The header name for the column.   If it is not set, the default is to format the `index` value.","values":[{"name":"\"My Header\""}]},{"name":"header-auto-format","description":"Setting to `disabled` will turn off formatting on the header of the column.  By default, headers will \nconvert from camel-, dash-, or kebab-case to a properly spaced and capitalized string.  Or \nset to a function name to customize formatting of header text.  The custom function takes in two parameters, \n`index` and `headerText`, and returns the formatted header text.","values":[{"name":"\"disabled\""},{"name":"\"functionName\""}]},{"name":"hidden","description":"Presence of attribute hides the column.","values":[{"name":"N/A"}]},{"name":"index","description":"A single index or multiple indices (separated by comma), to associate information in the data source\n to a column in the grid.  Nested data keys are referenced by the member character `.` (Ex. data.key).","values":[{"name":"\"recordkey\""},{"name":"\"key1\""},{"name":"\"object.key1\""},{"name":"\"key1, key2, keyN\""}]},{"name":"locale","description":"Localization code used with column type `currency`.","values":[{"name":"\"de-De\""}]},{"name":"menu-text","description":"The text to display in the control menu for the column.  If it is not set, it is set to the header text.","values":[{"name":"\"My Header\""}]},{"name":"renderer","description":"Overrides the default renderer for the column.  Can be set to a different built-in or custom renderer.  \nTo use a custom renderer, the attribute should be set to the name of the function.  \nThe renderer function takes in the following arguments, `value of index` (for each index), `domCell`, and `cellObject`.\nThe returned value of the renderer function is set as the innerHTML of the cell.","values":[{"name":"\"functionName\""}]},{"name":"renderer-template","description":"Points to an external template element to be used as the template for the column's renderer.","values":[{"name":"\"myTemplateId\""}]},{"name":"search","description":"Turns off the search on a column if `search` is present on `<zing-grid>`.","values":[{"name":"\"disabled\""}]},{"name":"separator","description":"If multiple indices are set, this is the string that separates them in the display.  By default, it is a comma.","values":[{"name":"\"-\""}]},{"name":"sort","description":"Turns off the sort on a column if `sort` is present on `<zing-grid>`.","values":[{"name":"\"disabled\""}]},{"name":"sort-asc","description":"Presence of attribute sorts the column data in ascending order.","values":[{"name":"N/A"}]},{"name":"sort-desc","description":"Presence of attribute sorts the column data in descending order.","values":[{"name":"N/A"}]},{"name":"sorter","description":"Overrides the default sorter for the column.  It is also possible to override the column sorting by \npassing in method name of sort function instead or setting to `disabled` to diable sorting.  Sorter function\ntakes in two values (a, b) and returns 1, -1, or 0 indicating if `a > b`, `a < b`, or `a = b`.\nCan also be set to a path in the dataset to perform the sort on.  This is useful for sorting object indices.","values":[{"name":"\"functionName\""}]},{"name":"type","description":"The type of the data stored in the column.  The column renderer/editor will behave based on the column type.","values":[{"name":"\"boolean\""},{"name":"\"currency\""},{"name":"\"custom\""},{"name":"\"date\""},{"name":"\"editor\""},{"name":"\"element\""},{"name":"\"email\""},{"name":"\"icon\""},{"name":"\"image\""},{"name":"\"iframe\""},{"name":"\"number\""},{"name":"\"password\""},{"name":"\"range\""},{"name":"\"remover\""},{"name":"\"row-number\""},{"name":"\"select\""},{"name":"\"selector\""},{"name":"\"tel\""},{"name":"\"text\""},{"name":"\"toggle\""},{"name":"\"url\""}]},{"name":"type-currency","description":"The currency to be used in currency formatting.","values":[]},{"name":"type-element-attribute-name","description":"Sets the attribute of the custom-element in the column when `<zg-column>` has `type` set to `element`.","values":[{"name":"\"attributeName\""}]},{"name":"type-element-tag-name","description":"Sets the tag to wrap content when `<zg-column>` has `type` set to `element`.  \nIf `type-element-attribute-name` isn't set, it will put the rendered data into the body of the element.\nIf `type-element-attribute-name` is set, it will set the attribute to the indexed value.","values":[]},{"name":"type-iframe-ratio","description":"To set a `square` ratio instead of the default `16:9`.","values":[{"name":"'square'"}]},{"name":"type-image-alt","description":"The alternative text used with the `image` type column.","values":[{"name":"\"Logo\""}]},{"name":"type-image-mask","description":"The alternative shape to mask the image.","values":[{"name":"\"circle\""}]},{"name":"type-range-max","description":"Maximum value for the input box. Used with the `range` type column in edit mode.","values":[{"name":"150"}]},{"name":"type-range-min","description":"Minimum value for the input box.  Used with `range` type column in edit mode.","values":[{"name":"100"}]},{"name":"type-range-step","description":"Specifies the step between each legal value for the input box.  Used with `range` type column in edit mode.","values":[{"name":"20"}]},{"name":"type-select-multiple","description":"In edit mode, presence of attribute allows column type `select` to have mulitple selections, instead of the default\nof a single selection.","values":[{"name":"N/A"}]},{"name":"type-select-options","description":"To set the options for the select box for a `select` column when `editor` is enabled on `<zing-grid>`.","values":[{"name":"\"M, T, W, Th, F\""}]},{"name":"type-toggle-options","description":"When the column type is set to `toggle`, use `typeToggleOptions` to set the list of options for the display.","values":[{"name":"[\"red\", \"orange\", \"yellow\", \"green\", \"blue\"]"}]},{"name":"type-url-icon","description":"If the column type is `url`, use this attribute to reference any `<zg-icon>` within the library\nto replace the link text with this icon.","values":[{"name":"\"link\""},{"name":"\"outsidearrow\""}]},{"name":"type-url-text","description":"If the column type is `url`, use the `type-url-text` attribute to set the text displayed for the link.","values":[{"name":"\"Go to site\""}]},{"name":"visibility-priority","description":"Used in the case of automatically removing columns on resize.  Columns without a `visibility-priority` never\ngets removed. The rest of the columns are removed from highest `visibility-priority` value to the lowest.","values":[{"name":"2"}]},{"name":"width","description":"Sets the width of the column.","values":[{"name":"\"fit\""},{"name":"\"fit-header\""},{"name":"\"fit-content\""},{"name":"\"stretch\""},{"name":"\"10%\""},{"name":"\"150px\""},{"name":"150"}]}]},{"name":"zg-control-bar","description":"The `<zg-control-bar>` is inserted dynamically by the ZingGrid library\nand serves as a container for the grid's interface controls.  As a generated element, developers\nshould not manually place `<zg-control-bar>` in their grid, however, they may style the bar and\nits internal elements using CSS.","attributes":[]},{"name":"zg-data","description":"The `<zg-data>` tag is used to associate a data set with the actual grid.  \nA top-level attribute is placed on `<zing-grid>` for basic cases, but when more fine grain \ncontrol is required, `<zg-data>`should be employed and various configuration values set via the \n`options` attribute or more appropriately via `<zg-param>` tags nested within the tag.","attributes":[{"name":"adapter","description":"Adapter is a shortcut to set known options for specific third party datasets.  Currently, the only build-in option offered is \"firebase\".  \nDevelopers could register their own custom adapters.  For more information on custom adapters, visit Guides > ZingGrid Object > registerAdapter().","values":[{"name":"\"firebase\""}]},{"name":"data","description":"Data for the grid presented as an array or object.  If set as an attribute value, the \ndata needs to be in JSON format.","values":[{"name":"[{\"firstName\": \"John\", \"lastName\": \"Doe\"}]"}]},{"name":"id-key","description":"In the case of non-key based objects, the idKey can be set to indicate the id to send back to the datasource on CRUD commands.\nFor example, if the READ URL was https://zinggrid-named.firebaseio.com/ then the UPDATE would be https://zinggrid-named.firebaseio.com/VALUE_OF_IDKEY.","values":[{"name":"\"state\""}]},{"name":"options","description":"Used to set `<zg-param>`, the configuration data for `<zg-data>`.  This should never be used directly as an attribute and \nis meant for object instantiation and for setting in JavaScript.","values":[{"name":"{\"idKey\":\"state\",\"sortDirKey\":\"_order\",\"sortDir\":\"desc\",\"sortByKey\":\"_sort\",\"sortBy\":\"capital\",\"src\":\"https://zinggrid-named.firebaseio.com/\"}"}]},{"name":"src","description":"Specifies the absolute or relative URL to fetch data from to populate the grid.","values":[{"name":"\"https://url-to-your-api\""}]}]},{"name":"zg-dialog","description":"The `<zg-dialog>` tag is used internally for dialogs used by \nCRUD (Create, Read, Update, and Delete) actions, as well as\nallow for custom dialogs to be created for generic use with the grid.  The design goal of the\ncustom element is to extend HTML's `<dialog>` element for a consistent style and more data grid-\nrelated duties.","attributes":[{"name":"cancel","description":"Callback method to call on custom dialog when the dialog's \"cancel\"\nbutton is clicked.","values":[{"name":"\"functionName\""}]},{"name":"confirm","description":"Callback method to call on custom dialog when the dialog's \"confirm\" \nbutton is clicked.","values":[{"name":"\"functionName\""}]},{"name":"label","description":"Sets the dialog's header 'label' text.","values":[{"name":"\"Are you sure you want to continue?\""}]},{"name":"open","description":"The presence of the specification-standard `open` attribute designates whether the dialog is shown or hidden.","values":[{"name":"N/A"}]}]},{"name":"zg-editor-row","description":"`<zg-editor-row>` holds the details of the edit mode for the grid.\n`<zg-editor-row>` is created internally and should not be placed directly in the user's HTML.","attributes":[]},{"name":"zg-focus","description":"The `<zg-focus>` element is a generated element added to `<zing-grid>`\nwhen the `selector` attribute is defined.  It is used as a container for the focus of cell(s) \nand used as a CSS target for styling by the developer.  It should not be accessed specifically\nbeyond styling.","attributes":[]},{"name":"zg-foot","description":"The `<zg-foot>` tag contains the foot cells (`<zg-foot-cell>`) of the data \ngrid specified via the `foot-cell` attribute found on `<zg-column>` tags.  The tag roughly\ncorresponds to the idea of the `<tfoot>` tag used in HTML tables.  The `<zg-foot>` tag is \ngenerated by the library and should not be placed in a grid manually by a developer, but\ninstead is used as a styling target for CSS.","attributes":[]},{"name":"zg-footer","description":"The `<zg-footer>` cell is a simple container element for content placed at the bottom of a grid.  \nIt may contain `<zg-caption>` or `<zg-source>`, but also may contain arbitrarily defined elements inserted by the \ndeveloper.  The element and its contents are stylable directly using CSS.","attributes":[]},{"name":"zg-head","description":"The `<zg-head>` tag contains the head cells (`<zg-head-cell>`) of the data grid specified via the\n`head-cell` attribute found on `<zg-column>` tags.  The tag roughly corresponds to the idea of the `<thead>` tag used in\nHTML tables.  The `<zg-head>` tag is generated by the library and should not be placed in a grid manually by a devloper,\nbut instead is used as a styling target for CSS.","attributes":[]},{"name":"zg-head-cell","description":"The `<zg-head-cell>` contains header information for a column and is roughly equivalent to the `<th>` \ntag used for HTML tables.  The `<zg-head-cell>` tag is generated by the library and should not be placed in a grid \nmanually by a developer, but can be used as a styling target for CSS.","attributes":[]},{"name":"zg-header","description":"`<zg-header>` is the semantic container placed at the top of the grid\nto hold various grid items.  `<zg-header>` is created internally and should not be placed\ndirectly in the user's HTML.  The element can be styled via CSS.","attributes":[]},{"name":"zg-icon","description":"`<zg-icon>` is used to display custom ZingGrid icons within the grid.  \nThe icon is set by its name, but can have a different look based on the grid's theme.  \n`<zg-icon>` is created internally when a feature that uses it is enabled, like `pager`, \nbut can be included in the grid manually as long as the name attribute exists.","attributes":[{"name":"name","description":"Sets the icon type of the ZGIcon.","values":[{"name":"\"cancelrecord\""},{"name":"\"checked\""},{"name":"\"checkmark\""},{"name":"\"close\""},{"name":"\"down\""},{"name":"\"edit\""},{"name":"\"editrecord\""},{"name":"\"firstpage\""},{"name":"\"lastpage\""},{"name":"\"layoutcard\""},{"name":"\"layoutrow\""},{"name":"\"link\""},{"name":"\"menu\""},{"name":"\"nextpage\""},{"name":"\"outsidearrow\""},{"name":"\"prevpage\""},{"name":"\"reload\""},{"name":"\"remove\""},{"name":"\"removerecord\""},{"name":"\"search\""},{"name":"\"sort\""},{"name":"\"submitrecord\""},{"name":"\"unchecked\""},{"name":"\"up\""}]}]},{"name":"zg-input","description":"`<zg-input>` contains input fields with added ZingGrid-specific functionality.\nThe specific functionality can be set via the `action` attribute.","attributes":[{"name":"action","description":"The built-in behavior and display of the input.  Gets and sets the associated grid property.","values":[{"name":"\"currpage\""}]},{"name":"value","description":"The value of the input.","values":[{"name":"\"6\""}]}]},{"name":"zg-layout-controls","description":"Allows you to switch between normal row mode and condensed card mode for the grid.  \n`<zg-layout-controls>` is created internally and should not be placed directly in the user's HTML, however\nthe user can style the `<zg-layout-controls>` using the `zg-layout-controls` selector.","attributes":[]},{"name":"zg-load-mask","description":"The `<zg-load-mask>` element is used to define the loading overlay that displays\non top of the grid before the grid is completely rendered.  The element is generally dynamically created, \nthough it is possible to manually define it for a complex loading screen.  More appropriate would be to \ndefine a simple message and use CSS to style the element.","attributes":[]},{"name":"zg-menu","description":"The `<zg-menu>` element is a container for a custom menu for ZingGrid \nused as context or static (aka \"Hamburger\") menu.  The element is generally dynamically \ninserted by the library, though the developer can append of overwrite menu with custom \nentries.  The element can be styled using CSS.","attributes":[{"name":"replace","description":"Presence of attribute replaces the default context menu with a custom menu.\nIf `replace` is not set, the custom menu will be appended to the end of the default menu.","values":[{"name":"N/A"}]}]},{"name":"zg-menu-group","description":"A group wrapper for multiple menu items found in the context \nmenu.  ZingGrid dynamically creates this element to hold various `<zg-menu-item>` \ntags together for organizational purposes.  As it is a visual element, it can be \nstyled via CSS.","attributes":[]},{"name":"zg-menu-item","description":"This element defines a single menu item in ZingGrid's context \nmenu defined by `<zg-menu>`.  The element is typically dynamically generated, through \nit can be overwritten by a user's own custom `<zg-menu-item>` elements.  The \nelement can be styled via CSS.","attributes":[]},{"name":"zg-pager","description":"An element that contains the UI controls for paging through a grid's data set.  The \nelement can be manually placed, though it is more often dynamically inserted when paging is enabled via \nthe `pager` attribute on the `<zing-grid>` tag.  The element can be styled via CSS.","attributes":[{"name":"page-size","description":"Sets the number of records or rows to display per page.","values":[{"name":"10"}]},{"name":"page-size-card","description":"Sets the number of cards to display per page when in card mode.","values":[{"name":"10"}]},{"name":"page-size-row","description":"Sets the number of rows to display per page when in row mode.","values":[{"name":"10"}]},{"name":"position","description":"Indicates where to position the pager.","values":[{"name":"\"top\""},{"name":"\"bottom\""}]},{"name":"size-options","description":"Sets the options for page size in `zg-option-list`.","values":[{"name":"\"2,4,6\""}]}]},{"name":"zg-param","description":"`<zg-param>` is a non-visual element used to pass the configuration options for the `<zg-data>` \nelement more cleanly via `name`-`value` pairs.  The element is not required, though it is preferred, as everything set \nwithin a `<zg-param>` element can also be set directly on `<zg-data>` via the `config` attribute.  Developers should note \nthat when setting complex values for the `value` attribute to use JSON encoded balues.  Also, as a non-visual element, \nCSS styling does not apply to `<zg-param>`.","attributes":[{"name":"name","description":"Name of parameter.","values":[{"name":"\"adapter\""},{"name":"\"idKey\""},{"name":"\"newIndexPath\""},{"name":"\"recordPath\""},{"name":"\"searchKey\""},{"name":"\"search\""},{"name":"\"sortByKey\""},{"name":"\"sortBy\""},{"name":"\"sortDirKey\""},{"name":"\"sortDir\""},{"name":"\"startAtKey\""},{"name":"\"startAtValue\""},{"name":"\"limitToKey\""},{"name":"\"limitTo\""},{"name":"\"pageKey\""},{"name":"\"countPath\""},{"name":"\"cursor\""},{"name":"\"loadByPage\""},{"name":"\"loadByScroll\""},{"name":"\"hasNextPath\""},{"name":"\"nextPath\""},{"name":"\"nextIDPath\""},{"name":"\"nextIDKey\""},{"name":"\"hasPrevPath\""},{"name":"\"prevPath\""},{"name":"\"prevIDPath\""},{"name":"\"prevIDKey\""},{"name":"\"pageBase\""},{"name":"\"createOptions\""},{"name":"\"readOptions\""},{"name":"\"updateOptions\""},{"name":"\"deleteOptions\""},{"name":"\"src\""},{"name":"\"method\""},{"name":"\"headers\""},{"name":"\"queryString\""},{"name":"\"body\""},{"name":"\"exclude\""},{"name":"\"requestType\""},{"name":"\"mode\""}]},{"name":"value","description":"Value of \"name\" parameter","values":[{"name":"'{\"src\":\"http://example.com/deletestate/\",\"method\":\"GET\"}'"}]}]},{"name":"zg-row","description":"`<zg-row>` is the container for the `<zg-cell>`, `<zg-head-cell>`, and `<zg-filter>` elements.\nIt corresponds to the `<tr>` tag on an HTML table.\nThe `<zg-row>` element is created dynamically and should not be placed in the grid by a devloper.  \nHowever, the element is useful for styling the various rows of the grid using CSS.","attributes":[]},{"name":"zg-search","description":"The `<zg-search>` element is used to encapsulate the interface widget necessary for searching the grid -- \ntypically a text field and a button to trigger the search.  The element is added dynamically when search is specified and \nshould not be directly inserted by the developer.  The element and its contents can be styled using CSS.","attributes":[]},{"name":"zg-selector-mask","description":"`<zg-selector-mask>` is used to wrap the cells during user selection for \nstyling purposes.  The element is dynamically added to the grid based upon the presence of the \n`selector` attribute on the `<zing-grid>` element.  The element should not be manually inserted, \nthrough it can be styled using CSS.","attributes":[]},{"name":"zg-separator","description":"`<zg-separator>` specifies the horizontal bar in the `<zg-menu>` used for separating \nitems.  The element is created dynamically and should not be manually inserted by developers.  However,\n`<zg-separator>` can be styled using CSS.\n`<zg-separator>` is created internally and should not be placed directly in the user's HTML, however\nthe user can style the `<zg-separator>` using the `zg-separator` selector.","attributes":[]},{"name":"zg-source","description":"`<zg-source>` is used to source the data in ZingGrid.  The \nelement internally wraps any text in a `<cite role=\"any\">` tag for proper semantics.  The\nelement is stylable with CSS like most ZingGrid elements.","attributes":[]},{"name":"zg-status","description":"`<zg-status>` is a custom element used to display messages to the \nuser, such as errors and verifications of CRUD actions.  `<zg-status>` is created \ndynamically and should not be inserted manually.  The `<zg-status>` element is \nstylable with CSS.","attributes":[]},{"name":"zg-text","description":"`<zg-text>` is a ZingGrid specific text value that is bound to \nthe status of the grid, as defined by the `value` attribute.  The field can be \nmanually inserted by a developer, but is more commonly added by the use of certain \ngrid features, like paging.  The element is stylable with CSS.","attributes":[{"name":"value","description":"Specifies what value to generate in text field.  Current build-in options are \npager-related information.","values":[{"name":"\"currpage\""},{"name":"\"pagecount\""},{"name":"\"pagesize\""},{"name":"\"startrow\""},{"name":"\"endrow\""},{"name":"\"rowcount\""}]}]},{"name":"zing-grid","description":"The most important tag in the library. Contains most of the attributes to turn grid features on/off. \nSet `zing-grid:not(:defined) {display:none;}` to hide <zing-grid> instances until they are ready. \nThis stops child elements from appearing unstyled for a brief moment.","attributes":[{"name":"caption","description":"The caption for the grid.","values":[{"name":"\"My Caption\""}]},{"name":"cell-break","description":"The type of `word-break` style for body cells. When not set, `work-break` style is `word` by default. \nTo overwrite `word-break` for cells in a specific column, set `cell-break` for that column. However, `cell-break` is not reactive in `<zg-column>`.","values":[{"name":"\"all\""},{"name":"\"ellipsis\""},{"name":"\"normal\""},{"name":"\"word\""}]},{"name":"cell-class","description":"Adds a class to each `<zg-cell>` in the grid. This attribute can be applied to both \n`<zing-grid>` or `<zg-column>`. If the attribute is applied to both, `<zg-column>`'s `cell-class` overwrites `<zing-grid>`'s `cell-class`.\nTo set a class conditionally, set `cell-class` to the name of the function, which takes in the arguments `cellData`, `domContainer`, `cellObject`.","values":[{"name":"\"userClassName\""},{"name":"\"functionName\""}]},{"name":"col-class","description":"Adds a class to each `<zg-cell>` in targeted `<zg-column>`. To\napply a class conditionally, set the value to the name of the function to run \non each cell value. The function takes the parameters `fieldIndex`, `domContainer`,\nand `colObject`, and returns a string which is the class name to apply.","values":[{"name":"\"userClassName\""},{"name":"\"functionName\""}]},{"name":"columns","description":"Specifies the columns of the grid.  More appropriate to use `<zg-column>` in most cases or set the property programatically.","values":[{"name":"[{\"index\": \"firstName\"}, {\"index\": \"lastName\"}]"}]},{"name":"columns-control","description":"Presence of attribute turns on the menu to show and hide columns.","values":[{"name":"N/A"}]},{"name":"compact","description":"Augments internal themes to a compact mode.","values":[{"name":"N/A"}]},{"name":"config","description":"Used to set multiple grid properties at once.  This should never be used directly.  \nThis is meant for object instantiation.","values":[{"name":"{\"search\": true,\"pager\":true,\"caption\": \"Actors/Actresses\",\"pageSize\": 5}"}]},{"name":"confirm-delete","description":"Turns off delete confirmation if set to disable.","values":[{"name":"\"disabled\""}]},{"name":"context-menu","description":"Presence attribute which enables the default `<zing-grid>` context menu or set to the id name of a custom `<zg-menu>`.  If\nset to a custom menu and `<zg-menu>` has the `replace` attribute present, then the custom menu will replace the context menu.  \nOtherwise the contents of the custom meny is appended to the end of context menu.","values":[{"name":"N/A"},{"name":"\"myCustomMenu\""}]},{"name":"data","description":"Data for the grid presented as an array or object.","values":[{"name":"[{\"firstName\": \"John\", \"lastName\": \"Doe\"}]"}]},{"name":"default-display","description":"The data to display in each cell where the data value is null or undefined.","values":[{"name":"\"N/A\""}]},{"name":"drag-action","description":"Specifies the action of dragging allowed.  By default, if `draggable` is \nenabled then `drag-action` is set `\"both\"`.  This property has no meaning if `draggable` is not enabled.","values":[{"name":"\"reorder\""},{"name":"\"remove\""},{"name":"\"both\""}]},{"name":"draggable","description":"Enables column and/or row dragging.","values":[{"name":"\"rows\""},{"name":"\"columns\""},{"name":"\"both\""}]},{"name":"editor","description":"Turns on the grid editor.  Enables single cell editing via double click.\nSets the editor to inline (default) or modal.","values":[{"name":"\"modal\""},{"name":"true"}]},{"name":"editor-controls","description":"Adds columns for the editor controls.  If it is added, default is \"all\".","values":[{"name":"\"editor\""},{"name":"\"remover\""},{"name":"\"creator\""},{"name":"\"all\""},{"name":"true"},{"name":"false"}]},{"name":"filter","description":"Presence enables on filtering for all columns.  Can be turned on/off individually via column.","values":[{"name":"N/A"}]},{"name":"foot-class","description":"Adds a class to each `<zg-cell>` in the `<zg-foot>`. To\napply a class conditionally, set the value to the name of the function to run \non each cell value. The function takes the parameters `fieldIndex`, `domContainer`,\nand `colObject`, and returns a string which is the class name to apply.","values":[{"name":"\"userClassName\""},{"name":"\"functionName\""}]},{"name":"gridlines","description":"Set vertical, horizontal or both grid lines to the grid.","values":[{"name":"\"both\""},{"name":"\"horz\""},{"name":"\"horizontal\""},{"name":"\"vert\""},{"name":"\"vertical\""}]},{"name":"head-class","description":"Adds a class to each `<zg-cell>` in the `<zg-head>`. To\napply a class conditionally, set the value to the name of the function to run \non each cell value. The function takes the parameters `fieldIndex`, `domContainer`,\nand `colObject`, and returns a string which is the class name to apply.","values":[{"name":"\"userClassName\""},{"name":"\"functionName\""}]},{"name":"header-auto-format","description":"Setting to `disabled` will turn off formatting on headers.  By default, headers will \nconvert from camel case, dash, and kebab case to properly spaced and capitalized.  Or \nset to a function name to customize formatting of headers.","values":[{"name":"\"disabled\""},{"name":"\"functionName\""}]},{"name":"height","description":"Sets the height of the grid.  If the height is less than the size of the content, scrolling is added\nto grid body.","values":[{"name":"\"500px\""},{"name":"\"500\""},{"name":"500"}]},{"name":"icon-set","description":"Allows the user to change the grid icon set to an allowed 3rd-party type (ex: Font-Awesome).\nTo use a custom icon set, the icon set must first be registered.","values":[{"name":"\"fa\""},{"name":"\"fontawesome\""},{"name":"\"font-awesome\""}]},{"name":"layout","description":"Sets the grid layout to be either `card` or `row` and adds `<zg-layout-controls>` to the grid.\nThe default is based on the size of the user's screen, unless `layout` is set.","values":[{"name":"\"card\""},{"name":"\"row\""}]},{"name":"layout-controls","description":"When `layout` is set, by default `layout-controls` is enabled.  \nTo hide, set `layout-controls` to `disabled`.  Presence of this attribute will enable\n`<zg-layout-controls>` even if `layout` is not set.","values":[{"name":"\"disabled\""}]},{"name":"loading","description":"Presence of attribute adds loading state to grid, which triggers `<zg-load-mask>` to show.\nThis attribute allows styling the height of the grid (via CSS) before the data has loaded in the grid.","values":[{"name":"N/A"}]},{"name":"loading-text","description":"Sets the text to display in the `<zg-load-mask>` on data load.","values":[{"name":"\"ZingGrid is Loading\""}]},{"name":"loadmask","description":"Set `loadmask=\"disabled\"` to prevent the `<zg-load-mask>` from showing on data load.","values":[{"name":"\"disabled\""}]},{"name":"page-size","description":"Can be set only if `pager` is set.  Sets the number of records or rows to display per page.","values":[{"name":"10"}]},{"name":"page-size-card","description":"Can be set only if `pager` is set.  Sets the number of cards to display per page when in card mode.","values":[{"name":"10"}]},{"name":"page-size-options","description":"Can be set only if `pager` is set.  Sets the options for page size in `zg-optionl-ist`.","values":[{"name":"\"15,20,35\""}]},{"name":"page-size-row","description":"Can be set only if `pager`.  Sets the number of rows to display per page when in row mode.","values":[{"name":"10"}]},{"name":"pager","description":"Adds pagination functionality and controls to the grid.","values":[{"name":"N/A"}]},{"name":"params","description":"Name/Value pairs of `<zg-param>` values.  More appropriate to use `<zg-param>` in most cases.","values":[{"name":"{idKey: \"id\", sortByKey: \"_sort\", sortBy: \"capital\"}"}]},{"name":"record-count","description":"Sets the total record count.  Useful for `loadByPage` when the response packet\ndoes not return total count of records.","values":[{"name":"1000"}]},{"name":"row-class","description":"Adds a class to each `<zg-row>` element. To\napply a class conditionally, set the value to the name of the function to run \non each cell value. The function takes the parameters `data`, `rowIndex` (1-based),\n `domRow`, and `rowObject`, and returns a string which is the class name to apply.","values":[{"name":"\"userClassName\""},{"name":"\"functionName\""}]},{"name":"row-selector","description":"Presence of attribute adds `selector` type column to the rows as the first column.","values":[{"name":"N/A"}]},{"name":"search","description":"Presence of attribute turns on the search feature and add `<zg-search>` to the grid.  \nThe search button appears in the caption header.","values":[{"name":"N/A"}]},{"name":"selector","description":"Presence of attribute turns on the selector feature on the grid and adds\n`<zg-selector-mask>` to the grid.","values":[{"name":"N/A"}]},{"name":"server-rendered","description":"Indicates that the grid was completely rendered on the server and embedded in the page.","values":[{"name":"N/A"}]},{"name":"sort","description":"Presence of attribute enables sorting on all columns.  It is possible to disable specific columns \nvia the columns object or setting `sort=\"disabled\"` to specified columns.","values":[{"name":"N/A"}]},{"name":"sorter","description":"Override the column sorting by passing in method name of sort function instead.  Sorter function\ntakes in two values (a, b) and returns 1, -1, or 0 indicating if `a > b`, `a < b`, or `a = b`.","values":[{"name":"\"functionName\""}]},{"name":"source","description":"Defines the source of the data in the grid. Adds the `<zg-source>` element.","values":[{"name":"\"Source: Wikipedia\""}]},{"name":"src","description":"Specifies the absolute or relative URL to fetch data from to populate the grid.","values":[{"name":"\"https://url-to-your-api\""}]},{"name":"static-menu","description":"Presence of attribute adds a display button that launch the contextmenu.","values":[{"name":"N/A"}]},{"name":"template-end-delimiter","description":"Define the regex expression for closing data binding.","values":[{"name":"\"}}\""}]},{"name":"template-start-delimiter","description":"Define the regex expression for starting data binding.","values":[{"name":"\"{{\""}]},{"name":"theme","description":"Sets the theme of the grid.  Built-in themes are specified by keyword, but custom theme\nnames are also accepted by setting a URL path to your custom css theme file.  For custom themes, on load set `theme` \nto the path to the custom theme file.  After, set to theme name to switch themes.","values":[{"name":"\"android\""},{"name":"\"black\""},{"name":"\"default\""},{"name":"\"dark\""},{"name":"\"ios\""},{"name":"\"urlToThemeFile\""},{"name":"\"customThemeName\""}]},{"name":"viewport","description":"Internal attribute.  Should not be set.","values":[{"name":"N/A"}]},{"name":"viewport-pause","description":"Presence of attribute keeps current value of `viewport` and freezes the breakpoint.","values":[{"name":"N/A"}]},{"name":"viewport-stop","description":"Presence of attribute removes `viewport` attribute, disabling viewport resizing.","values":[{"name":"N/A"}]},{"name":"viewport-types","description":"Sets custom `viewport` breakpoints (value string-object must be valid JSON).  \nNOTE: If you don't set `mobile`, the grid won't auto-set card or row mode.","values":[{"name":"{ mobile: 500, test: 600, desktop: 800 }"}]},{"name":"width","description":"Sets the width of the grid.  If the width is less than the size of the content, scroll is added to `<zg-body>`.","values":[{"name":"\"500\""},{"name":"\"500px\""},{"name":"\"5em\""},{"name":"\"5%\""},{"name":"\"50vw\""},{"name":"500"}]},{"name":"zebra","description":"Presence of attribute adds the classes, `zebra-1` and `zebra-2`, alternating on `<zg-row>` elements.  Setting to a \nlist of class names will assign classes in sequential order.  For conditional zebra classes, `zebra` also accepts name of function that \nreturns a class name to use for zebra striping.","values":[{"name":"\"userCustomStyle\""}]}]}]}